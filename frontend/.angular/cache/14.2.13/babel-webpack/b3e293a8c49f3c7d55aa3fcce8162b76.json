{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ProductService = /*#__PURE__*/(() => {\n  class ProductService {\n    constructor(httpClient) {\n      this.httpClient = httpClient;\n      this.baseUrl = 'http://vhost1.localhost/api/products';\n      this.categoryUrl = 'http://vhost1.localhost/api/categories';\n    }\n\n    getProduct(theProductSku) {\n      // need to build URL based on product id\n      const productUrl = `${this.baseUrl}/${theProductSku}`;\n      return this.httpClient.get(productUrl);\n    }\n\n    getProductList(thePage, thePageSize) {\n      const searchUrl = `${this.baseUrl}?page=${thePage}&size=${thePageSize}`;\n      return this.httpClient.get(searchUrl);\n    }\n\n    searchProductsPaginate(theKeyword, thePage, thePageSize) {\n      const searchUrl = `${this.baseUrl}/search/${theKeyword}?page=${thePage}&size=${thePageSize}`;\n      return this.httpClient.get(searchUrl);\n    }\n\n    getProductCategories() {\n      return this.httpClient.get(this.categoryUrl);\n    }\n\n    getProductsByCategory(category, page, size) {\n      const searchUrl = `${this.baseUrl}/by-category/${category}?page=${page}&size=${size}`;\n      return this.httpClient.get(searchUrl);\n    }\n\n  }\n\n  ProductService.ɵfac = function ProductService_Factory(t) {\n    return new (t || ProductService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  ProductService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProductService,\n    factory: ProductService.ɵfac,\n    providedIn: 'root'\n  });\n  return ProductService;\n})();","map":null,"metadata":{},"sourceType":"module"}